# Generated by Django 4.2.4 on 2023-08-20 23:31

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomisedUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[(1, 'Admin'), (2, 'Staff'), (3, 'Student')], default=1, max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ModelAttendance',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('attendance_timestamp', models.DateField()),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('updated_time', models.DateTimeField(auto_now_add=True)),
            ],
            managers=[
                ('models_object', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ModelCourses',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('course_name_char', models.CharField(max_length=255)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('updated_time', models.DateTimeField(auto_now_add=True)),
            ],
            managers=[
                ('models_object', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ModelSessionYear',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('start_session_year', models.DateField()),
                ('end_session_year', models.DateField()),
            ],
            managers=[
                ('models_object', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ModelSubjects',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('subject_name_char', models.CharField(max_length=255)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('updated_time', models.DateTimeField(auto_now_add=True)),
                ('course_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='students_app.modelcourses')),
                ('staff_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            managers=[
                ('models_object', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ModelStudents',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('gender_val', models.CharField(max_length=255)),
                ('profile_image', models.FileField(upload_to='')),
                ('address_text', models.TextField()),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('updated_time', models.DateTimeField(auto_now_add=True)),
                ('token_fcm', models.TextField(default='')),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='students_app.modelcourses')),
                ('session_year_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students_app.modelsessionyear')),
            ],
            managers=[
                ('models_object', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ModelStudentResult',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('subject_exam_marks_float', models.FloatField(default=0)),
                ('subject_assignment_marks_float', models.FloatField(default=0)),
                ('created_time', models.DateField(auto_now_add=True)),
                ('updated_time', models.DateField(auto_now_add=True)),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students_app.modelstudents')),
                ('subject_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students_app.modelsubjects')),
            ],
            managers=[
                ('models_object', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ModelStaff',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('address', models.TextField()),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('updated_time', models.DateTimeField(auto_now_add=True)),
                ('token_fcm', models.TextField(default='')),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            managers=[
                ('models_object', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ModelOnlineClassRoom',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('room_name_text', models.CharField(max_length=255)),
                ('room_pwd_text', models.CharField(max_length=255)),
                ('is_active_bool', models.BooleanField(default=True)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('session_years', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students_app.modelsessionyear')),
                ('started_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students_app.modelstaff')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students_app.modelsubjects')),
            ],
            managers=[
                ('models_object', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ModelNotificationStudent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('message_text', models.TextField()),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('updated_time', models.DateTimeField(auto_now_add=True)),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students_app.modelstudents')),
            ],
            managers=[
                ('models_object', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ModelNotificationStaff',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('message_text', models.TextField()),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('updated_time', models.DateTimeField(auto_now_add=True)),
                ('staff_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students_app.modelstaff')),
            ],
            managers=[
                ('models_object', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ModelLeaveReportStudent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('leave_date_char', models.CharField(max_length=255)),
                ('leave_message_text', models.TextField()),
                ('leave_status_int', models.IntegerField(default=0)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('updated_time', models.DateTimeField(auto_now_add=True)),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students_app.modelstudents')),
            ],
            managers=[
                ('models_object', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ModelLeaveReportStaff',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('leave_date_char', models.CharField(max_length=255)),
                ('leave_message_text', models.TextField()),
                ('leave_status_int', models.IntegerField(default=0)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('updated_time', models.DateTimeField(auto_now_add=True)),
                ('staff_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students_app.modelstaff')),
            ],
            managers=[
                ('models_object', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ModelFeedBackStudent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('feedback_text', models.TextField()),
                ('feedback_reply_text', models.TextField()),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('updated_time', models.DateTimeField(auto_now_add=True)),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students_app.modelstudents')),
            ],
            managers=[
                ('models_object', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ModelFeedBackStaff',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('feedback_text', models.TextField()),
                ('feedback_reply_text', models.TextField()),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('updated_time', models.DateTimeField(auto_now_add=True)),
                ('staff_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students_app.modelstaff')),
            ],
            managers=[
                ('models_object', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ModelAttendanceReport',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status_bool', models.BooleanField(default=False)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('updated_time', models.DateTimeField(auto_now_add=True)),
                ('attendance_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students_app.modelattendance')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='students_app.modelstudents')),
            ],
            managers=[
                ('models_object', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='modelattendance',
            name='session_year_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students_app.modelsessionyear'),
        ),
        migrations.AddField(
            model_name='modelattendance',
            name='subject_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='students_app.modelsubjects'),
        ),
        migrations.CreateModel(
            name='ModelAdmin',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('updated_time', models.DateTimeField(auto_now_add=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            managers=[
                ('models_object', django.db.models.manager.Manager()),
            ],
        ),
    ]
